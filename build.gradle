buildscript {
    ext {
        kotlinVersion = '1.5.30'
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        maven {
            url 'https://s01.oss.sonatype.org/content/repositories/releases/'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'vip.sujianfeng.etl'
    version = '1.0.0-SNAPSHOT'
    sourceCompatibility = '1.8'

    tasks.withType(Jar) {
        destinationDir = file("$rootDir/output/jars")
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    repositories {
        maven {
            url 'https://s01.oss.sonatype.org/content/repositories/releases/'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        mavenCentral()
    }
    bootJar { enabled = false }

    dependencies {
        implementation 'vip.sujianfeng:enjoy-utils:1.0.1'
        implementation 'vip.sujianfeng:enjoy-models:1.0.1'
        implementation 'vip.sujianfeng:enjoy-data-source:1.0.1'
        implementation 'vip.sujianfeng:enjoy-dao:1.0.1'
        implementation 'vip.sujianfeng:enjoy-rbac:1.0.1'
        implementation 'vip.sujianfeng:enjoy-weixin:1.0.1'
        implementation 'vip.sujianfeng:enjoy-redis:1.0.1'
        implementation 'vip.sujianfeng:enjoy-http-client:1.0.1'
        implementation 'vip.sujianfeng:enjoy-script-engine:1.0.1'
        implementation 'vip.sujianfeng:enjoy-token:1.0.1'
        implementation 'vip.sujianfeng:enjoy-excel:1.0.1'
        implementation 'vip.sujianfeng:enjoy-aliyun-oss:1.0.1'

        implementation('org.apache.poi:poi:4.0.0')
        implementation('org.apache.poi:poi-ooxml:4.0.0')

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-logging'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-websocket'

        ///implementation 'org.springframework.session:spring-session-data-redis'

        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"


        implementation 'io.springfox:springfox-swagger2:2.8.0'
        implementation 'io.springfox:springfox-swagger-ui:2.8.0'
        implementation 'com.github.xiaoymin:swagger-bootstrap-ui:1.8.7'

        implementation 'org.java-websocket:Java-WebSocket:1.4.0'
        implementation 'commons-io:commons-io:2.6'
        implementation 'org.apache.commons:commons-lang3:3.7'
        implementation 'org.apache.commons:commons-collections4:4.4'
        implementation 'org.apache.httpcomponents:httpclient:4.5.12'
        implementation 'org.apache.httpcomponents:httpmime:4.5.12'
        implementation 'com.aliyun.oss:aliyun-sdk-oss:3.8.0'

        implementation (
                'dom4j:dom4j:1.6.1',
                'redis.clients:jedis:2.9.0',
                'com.google.guava:guava:18.0'
        )

        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.2'
        implementation 'com.alibaba:fastjson:2.0.2'

        implementation 'redis.clients:jedis:2.9.0'
        implementation 'jdom:jdom:1.0'

        runtimeOnly 'mysql:mysql-connector-java'
        runtimeOnly 'com.microsoft:sqljdbc4:3.0'

        implementation 'com.alibaba:druid:1.1.17'
        implementation 'com.aliyun:aliyun-java-sdk-core:3.0.0'
        implementation 'com.aliyun:aliyun-java-sdk-dm:3.1.0'
        implementation 'com.aliyun:dysmsapi20170525:2.0.5'

        implementation 'org.springframework:spring-test'

        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        //NekoHTML是一个java语言的html扫描器和标签补全器，这个解析器能够扫描html文件并"修正"html文档中的常见错误。NekoHTML能增补缺失的父元素、自动用结束标签关闭相应的元素，修复不匹配的内嵌元素标签等。
        implementation 'net.sourceforge.nekohtml:nekohtml'
        implementation 'org.unbescape:unbescape:1.1.5.RELEASE'


        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }
}

project(':80_web') {
    dependencies {
        implementation project(':00_models')
    }
}
